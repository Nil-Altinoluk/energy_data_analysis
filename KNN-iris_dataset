from sklearn.datasets import load_iris
import pandas as pd
#loading dataset that we will use
iris=load_iris() 
import numpy as np


print(iris.keys())
#checking the keys
print(iris['target_names'])
#checking features that we will use
print(iris['data'].shape)
#samples and features size
print(iris['target'])
#keys for targets


from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(iris['data'],iris['target'],random_state=0)
#spliting the data, calling the function

print(X_train.shape)
print(y_train.shape)

print(X_test.shape)
print(y_test.shape)

#train and test size 


from sklearn.neighbors import KNeighborsClassifier
KNN=KNeighborsClassifier(n_neighbors=1)
#calling the function, explaining the neighbors size

KNN.fit(X_train,y_train)
# training the method with our data

x_new_data=np.array([[4,3,1,1.3]])
#it is our new data which we want to learn the target

x_new_data.shape

guess=KNN.predict(x_new_data)

# guessing the  new type

print(guess)

#guessing our test elements

y_guess=KNN.predict(X_test)
print(y_guess)


#score of making true guess

print(KNN.score(X_test,y_test))
